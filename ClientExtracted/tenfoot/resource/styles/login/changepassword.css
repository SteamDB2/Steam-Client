.ChangePasswordInputContainer
{
	margin-top: 50px;
	flow-children: down;
	margin-bottom: controlgapvert;
}

.NewPasswordInputContainer
{
	margin-top: 30px;
	flow-children: down;
	width: 100%;
}

NewPasswordWizardChild #MessageLabel
{
	width: 100%;
	font-size: 32px;
}

TextEntry
{
	width: buttonwidth;
	height: buttonheight;

	font-size: 38px;
	font-family: platformfont;
	animation-name: none;
	vertical-align: center;
 	background-color: #173a4c;

	// Linux/Mac bug: border-radius != 0 results in no border - will fix
	//border-radius: 2px;
	border-radius: 0px;
}

Label.TextEntryPrompt
{
	horizontal-align: right;
	vertical-align: center;
	color: #888888;
	font-size: 24px;
	height: 28px;
	font-family: platformfont;
	padding-top: -2px;

	transition-property: opacity;
	transition-duration: 0.23s;
	transition-timing-function: ease-in;
}

TextEntry:disabled,.Button:disabled,ToggleButton:disabled
{
	saturation: 1.0;
	blur: gaussian( 0.7 );
	opacity: 0.40;
	border-color: none;
	box-shadow: none;
	animation-name: none;
}


// If the password control has focus and caplock is not on
TextEntry.CapsLock:focus .Password, .PasswordCapsLock
{
	opacity: 0.0;
}

// If the password control has focus and caplock is on
.Password, TextEntry.CapsLock:focus .PasswordCapsLock
{
	opacity: 1.0;
}

.HasInput .Password, TextEntry.HasInput:focus .PasswordCapsLock
{
	opacity: 0.0;
}

#PasswordLabelContainer
{
	width: buttonwidth;
}

#StrengthLabel
{
	horizontal-align: right;
}


.ForcedChange #ButtonCancel
{
	visibility: collapse;
}

#CurrentPasswordButtonBack
{
	visibility: collapse;
}

.ForcedChange #CurrentPasswordButtonBack
{
	visibility: visible;
}

#ConfCodePlain
{
	visibility: collapse;
}

.ForgotPassword #ConfCodePlain
{
	visibility: visible;
}

.ForgotPassword #ConfCodeEmail
{
	visibility: collapse;
}

.HideBack #ButtonBack
{
	visibility: collapse;
}
